<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xkz.dao.UserDao">
    <!--配置 查询结果的列名和实体类的属性名是对应关系-->
    <resultMap id="userMap" type="user">
        <!--主键字段的对应-->
        <id property="userId" column="id"></id>
        <!--非主键字段的对应-->
        <result property="userName" column="username"></result>
        <result property="userAddress" column="address"></result>
        <result property="userSex" column="sex"></result>
        <result property="userBirthday" column="birthday"></result>
    </resultMap>


    <!--了解的内容:抽取重复的sql语句-->
    <sql id="defaultUser">
        select * from user
    </sql>


    <!-- 查询所有 -->
    <!--引入上面写的sql-->
    <select id="findAll" resultMap="userMap">
        <include refid="defaultUser"></include>
    </select>
    <!--根据id查询用户-->
    <select id="findById" parameterType="int" resultType="user">
        select * from user where id=#{uid}
    </select>
    <!--根据名称模糊查询-->
    <!--List<User> users = userDao.findByName("%王%");-->
    <select id="findByName" parameterType="String" resultType="com.xkz.domain.User">
        select * from user where username like '%${value}%'
    </select>
    <!--根据queryVo的条件查询用户-->
    <select id="findUserByVo" parameterType="com.xkz.domain.QueryVo" resultType="com.xkz.domain.User">
        select * from user where username like #{user.username}
    </select>
    <!-- 根据条件查询
    <select id="findUserByCondition" resultMap="userMap" parameterType="user">
        select * from user where 1=1
        <if test="userName != null">
            and username = #{userName}
        </if>
        <if test="userSex != null">
            and sex = #{userSex}
        </if>
    </select>-->
    <select id="findUserByCondition" resultMap="userMap" parameterType="user">
        select * from user
        <where>
            <if test="userName != null">
                and username = #{userName}
            </if>
            <if test="userSex != null">
                and sex = #{userSex}
            </if>
        </where>
    </select>

    <!--根据queryvo中的Id集合实现查询用户列表-->
    <select id="findUserInIds" resultMap="userMap" parameterType="queryVo">
        select * from user
        <where>
            <if test="ids !=null and ids.size()>0">
                <!--当使用where标签的时候,如果紧接着他的是and或者or,那么where会自动将and或者or去除-->
                <foreach collection="ids" open="and id in (" close=")" item="id" separator=",">
                    #{id}
                </foreach>
            </if>
        </where>
    </select>
</mapper>