<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xkz.dao.UserDao">
    <!--配置 查询结果的列名和实体类的属性名是对应关系-->
    <resultMap id="userMap" type="user">
        <!--主键字段的对应-->
        <id property="userId" column="id"></id>
        <!--非主键字段的对应-->
        <result property="userName" column="username"></result>
        <result property="userAddress" column="address"></result>
        <result property="userSex" column="sex"></result>
        <result property="userBirthday" column="birthday"></result>
    </resultMap>
    
    
    <!-- 查询所有 -->
    <select id="findAll" resultMap="userMap">
        <!--select id as userId,username as userName,address as userAdress,sex as userSex,birthday as userBirthday from user;-->
        select * from user;
    </select>
    <!--保存用户-->
    <insert id="saveUser" parameterType="user">
        <!--配置插入操作后，获取插入的id -->
        <selectKey keyProperty="userId" keyColumn="id" resultType="int" order="AFTER">
            select last_insert_id();
        </selectKey>
        insert into user(username,address,sex,birthday)values (#{userName},#{userAddress},#{userSex},#{userBirthday});
    </insert>
    <update id="updateUser" parameterType="com.xkz.domain.User">
        update user set username=#{userName},address=#{userAddress},sex=#{userSex},birthday=#{UserBirthday} where id=#{UserId};
    </update>
    <!--删除用户  ps: 下面占位符中的功能可以为任意的名字,可以不跟实体类或者数据库中的字段相同-->
    <delete id="deleteUser" parameterType="Integer">
        delete from user where id = #{uid}
    </delete>
    <!--根据id查询用户-->
    <select id="findById" parameterType="int" resultType="com.xkz.domain.User">
        select * from user where id=#{uid}
    </select>
    <!--根据名称模糊查询-->
    <!--List<User> users = userDao.findByName("%王%");-->
    <select id="findByName" parameterType="String" resultType="com.xkz.domain.User">
        select * from user where username like '%${value}%'
    </select>
    <select id="findTotal" resultType="int">
        select count(id) from user
    </select>
    <!--根据queryVo的条件查询用户-->
    <select id="findUserByVo" parameterType="com.xkz.domain.QueryVo" resultType="com.xkz.domain.User">
        select * from user where username like #{user.username}
    </select>
</mapper>